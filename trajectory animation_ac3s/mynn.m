function [Y,Xf,Af] = mynn(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 15-Nov-2017 14:35:29.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx14 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [220.629935095162;32.8884221513264;8.49971330907335;-305.287585981373;-303.272433230291;8.04215523275249;-11.4279487226949;250.023557155481;-3.16904583037647;-3.09433171218552;41655.593008095;-1355.62150748512;8.04215523275249;-11.4279487226949];
x1_step1_gain = [0.0216109846859459;0.151405712964788;0.662413783265266;0.00317174014346478;0.00354488473093666;0.583917160711497;0.675989397373011;0.0198511812125887;0.293026540102641;0.288079899173828;0.0030836573659883;0.00263534979175779;0.583917160711497;0.675989397373011];
x1_step1_ymin = -1;

% Layer 1
b1 = [0.20225963019867357;-0.76374490837371622;-0.74279146898754977;-0.34335334047216004;1.3349436047336163;0.50285984813241547;-0.23539402747259947;-0.24730859779262265;0.97834948760569596;0.13435744579771644];
IW1_1 = [-0.23683472055827176 0.28144221402994435 0.081871030422170726 0.0028061228249243167 -0.0035063166415905097 -0.0057858878669161621 0.0040929675763022354 0.14771913867828051 -0.081552003276343418 -0.17694574274452143 -0.0091397341546469012 0.0021536413692170688 -0.0057858878832919977 0.0040929675813033131;0.19663470968089702 0.33033779721670409 0.057710274147478549 -0.0021947960963205372 0.00030276909030558028 -0.016904934791070393 0.0032176126278536232 -0.32428172445406744 -0.13912065840660151 -0.099438197855237248 -0.00040230925485964923 0.005688460747484414 -0.016904934797532845 0.0032176126379817719;-0.29585009091167186 0.078121445830272099 0.045634426867122116 -0.0093477224848576967 0.0027185689385708376 -0.0079698257109280767 0.0077382212646863969 0.2476956156846763 -0.040566112720863981 -0.14919067788294757 0.0087818203762095714 -0.010215420306814207 -0.0079698257165664206 0.0077382212483653439;-0.13237192735361067 0.10286631341019568 0.031379381334535598 -0.0045111321188796025 -0.00089656824005020447 -0.012426184036937972 -0.0025659131453479459 0.043380522441116003 0.090125311300664424 -0.05927943688974914 0.0063169772050587318 -0.0016173646853226255 -0.012426184038725053 -0.0025659131421626276;0.83294956149588062 0.37745360239945375 0.068313304684114742 0.028376503383575679 -0.00091638858524620249 0.013934551956397751 -0.011374695620505214 0.042881246717571285 -0.080428999063048456 -0.17902167030978836 -0.020770492249724382 -0.0043779950278190118 0.013934551959099551 -0.01137469563860812;-0.42766595227425536 0.027736842295221369 0.03703076052421804 0.0049275469000895425 -0.0057723355649584238 -0.0058144783765185599 0.00059199052667949746 0.31068412940636453 -0.012314126224501037 -0.026548572253574487 -0.0078574101315943244 0.0097748731994417946 -0.0058144783870382683 0.00059199052004335682;0.0012544528656607461 -0.4248912524166028 -0.096112656491460169 -0.0036384135626505421 -0.0010470267093544306 0.0066048687779082125 -0.0072506166600619032 0.071174847964545068 0.11942188644718216 0.20704223099831962 0.011138713022411524 -0.0071131977459024031 0.0066048687621334222 -0.0072506166690614448;-0.63701489237194397 -0.18156272755803893 -0.02517462427303379 -0.010257244273401155 -0.0015657814008962455 -0.012237580830866948 0.0025587035575780947 0.22315030315027759 0.037442082871859898 0.087054421809587348 0.0077732963723511524 0.0042261461511959994 -0.012237580815749089 0.0025587035514550334;0.37353492754195577 0.38271559954069728 0.072167169306125614 0.025189998360160813 -0.004282127337979634 0.0092765004171025348 -0.011446341759066437 0.35363038555526555 -0.084231964452963173 -0.16865763632805722 -0.018390828037422018 -0.0027522036530372137 0.0092765004188114682 -0.011446341766239416;-0.10173617639874429 0.015146911102700585 -0.012817820086861101 0.0050658234647671229 0.0083958213495920891 -0.015727364917660254 0.00016168766198472535 -0.20465058121049867 0.031341916586763101 -0.0006088847342436924 -0.0067967215787708805 -0.0021827018534139563 -0.015727364916769893 0.00016168765247118124];

% Layer 2
b2 = -0.16738668820747232;
LW2_1 = [-1.078553713418231 0.49117434622680828 -0.84925058021555921 1.207991469305983 -0.67808402544732838 1.9622863459351745 -0.5894265818620732 0.96625226401567643 0.65261453627571775 -1.447258608226645];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 7.99087741696149e-05;
y1_step1_xoffset = -8645.7983783533;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
